version: '3'
services:
    web:
        image: nginx:latest
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8000:80"
            - "8443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb

    nginx-exporter:
        image: nginx/nginx-prometheus-exporter:0.4.2
        container_name: nginx-exporter
        restart: unless-stopped
        environment:
            - SCRAPE_URI=http://10.10.240.121:8000/stub_status
            - TELEMETRY_PATH=/metrics
            - NGINX_RETRIES=10
        ports:
            - "10.10.240.121:9113:9113"

    php:
        image: php:8.2-rc-fpm #nanoninja/php-fpm:${PHP_VERSION}
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
            - "./etc/php/7.4/fpm/pool.d/www.conf:/usr/local/etc/php-fpm.d/www.conf"


    php-fpm-exporter:
      image: bakins/php-fpm-exporter:v0.6.1
      container_name: php-fpm-exporter
      restart: unless-stopped
      command: ["--endpoint", "http://10.10.240.121:8000/status", "--addr", "0.0.0.0:8081"]
      ports:
        - "10.10.240.121:9114:8081"


    #composer:
    #    image: "composer"
    #    volumes:
    #        - "./web/app:/app"
    #    command: install
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysqldb
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_ALLOW_EMPTY_PASSWORD=true
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"


    mysql-exporter:
        image: prom/mysqld-exporter
        container_name: mysql-exporter
        restart: unless-stopped
        env_file:
            - ".env"
        command:
            - "--mysqld.username=${MYSQL_USER_EXPORTER}:${MYSQL_PASSWORD_EXPORTER}"
            - "--mysqld.address=${MYSQL_HOST}:3306"
        #environment:
        #    - DATA_SOURCE_NAME=${MYSQL_USER_EXPORTER}:${MYSQL_PASSWORD_EXPORTER}@(mysqldb:3306)/
        ports:
            - "9104:9104"
        networks:
            - default
        logging:
            driver: "json-file"
            options:
                max-size: "5m"


    blackbox-exporter:
        image: prom/blackbox-exporter:latest
        ports:
            - 9115:9115
        command:
            - --config.file=/etc/blackbox/blackbox.yml
        volumes:
            - ./etc/blackbox/blackbox.yml:/etc/blackbox/blackbox.yml

    node-exporter:
        image: quay.io/prometheus/node-exporter
        container_name: node-exporter
        ports:
            - 9100:9100
        volumes:
            - "/:/rootfs"

    prometheus:
        image: prom/prometheus:v2.51.1
        volumes:
            - ./etc/prometheus/:/etc/prometheus/
            - ./data/prometheus/:/var/lib/prometheus/
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - 9090:9090
        restart: always

    alertmanager:
        image: prom/alertmanager:latest
        ports:
            - 9093:9093
        volumes:
            - ./etc/prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
            - ./data/alertmanager:/var/lib/alertmanager
        restart: always
        command:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--storage.path=/var/lib/alertmanager'
        deploy:
            mode: global

    grafana:
        image: grafana/grafana:10.4.1
        container_name: grafana
        ports:
            - 3000:3000
        restart: unless-stopped
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=grafana
        volumes:
            - ./data/grafana:/etc/grafana/provisioning/datasources
